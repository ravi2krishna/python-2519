18th Aug
========

-> Basic Python & Advanced Python

    -> Full Stack 

    -> Data Analytics / Data Science / Data Engineering

    -> Cloud / DevOps

-> Python

    -> Programming Language

    -> Programming Language 
    
        - To communicate with Machines
        - Giving commands (instructions) to computer

        -> English 

        -> Computers can only understand Binary Language

            -> Binary Language - 010101010101

            -> 01010000 01111001 01110100 01101000 01101111 01101110

                -> Python (Intermediate / Interpreter)

            -> Python is high-level, programming Language    
                

        -> general-purpose programming Language (Python)

            -> Desktop Applications
            -> Web Applications (Django, Flask, FAST API etc)
            -> Automation Scripts (Cloud / DevOps)
            -> Functional Based 
            -> etc

        -> domain specific programming Language

            -> SQL - Manage data bases using a language 
            -> HTML, CSS,  

    -> Programming Paradigms 

        -> Python supports Multi Paradigm approach to solve problems

            -> Imperative (How To Do)

                -> Python with OOPS

            -> Declarative (What To Do)

                -> Functional Programming


19th Aug
========

    -> Hardware 

        -> i3 / i5 Processor
        -> 8 GB RAM
        -> 250 GB SSD / HDD
    
    -> Softwares

        -> System Software

            -> Win / Linux / Unix(MACOS)

                -> Install Python 3.13.X (Python Interpreter)

                    -> Making our System Capable of running Python Code
                
                -> Install IDE (Integrated Development Environment) (Visual Studio Code)

                    -> For Writing Code

                    -> We have support For

                        -> Auto Code Completion

                        -> Syntax Highlighting

                        -> External Extensions Support

                        -> Debugging, Build Related Tools 

                -> Install Git (Version Control System - Code Tracking)

                    -> Client Software 

                    -> Track Source Code in your Workstation (Your Laptop)

                    -> Tracked Code will be uploaded to GitHub

        -> We need to setup GitHub Accounts 

            -> Storing Source Code

            -> Integrate GitHub Account with Git & IDE

20th Aug
========

-> How To Setup 

    -> Python
    -> IDE - VS Code
    -> Git (Git bash)
    -> GitHub
    -> Version Controlling
    -> Repository 
    -> Cloning 
    -> Pushing

21st Aug
========

-> Write Python Code 

    -> Script Mode (100%)

        -> Using code editor 

    -> Command Line / Interactive Mode (Quick Checks) 

        -> Directly executing code on python Interpreter using 
            CLI (Command Line Interface)

    -> Syntax - Rules and guidelines 

    -> print(hello world) -- issue
    -> print(9) -- No issue

    -> 9 is literal number, it doesn't need to be defined before hand
    -> hello world is a text, which needs to be represented in single
    or double quotes

        -> print(hello world) Wrong Syntax
        -> print('hello world') Correct Syntax
    
    -> Like English has 26 alphabets, which is basis for forming 
        words and sentences
    
    -> Python has same concept, which are called as Keywords

        -> keywords + syntax = program / app

    -> import is a keyword --> imports module --> module is a .py file

22nd Aug
========

-> Identifiers 

    -> Within python an Identifier is name used to identify following

        -> variables
        -> functions
        -> classes
        -> objects
        -> methods
        -> modules 
        -> etc
    
    -> Rules for naming Identifiers

        -> Can contain

            -> letters (a-z, A-Z)
            -> digits (0-9)
            -> underscore (_) 
        
        -> Must Start With

            -> A letter (a-z, A-Z)
            -> underscore (_) 
        
        -> NOTE : Cannot start with digits 
        -> NOTE : Cannot be keywords 
        -> NOTE: Case Sensitive (Name, name, NAME) (A, a)
        -> NOTE: Always name the Identifiers appropriately


-> Why Python / Key Features Of Python

    -> It's Easy (**)

        -> Syntax
        -> Execution
        -> Simplicity of language(space)  

    -> Fewer Lines Of Code (**)

        -> Addition Program in Python it's 3 lines
        -> Addition Program in Java it's 7 lines

    -> Interpreted (Python) vs Compiled (Java) (**)

        -> Performance -> Faster -> Compiled

        -> Performance -> Slower -> Interpreted

        -> Python Development Speed -> Faster 

            -> Python is best prototype language

        -> Java Development Speed -> Slower 

    -> Dynamically Typed (Python) (**)

        -> No need to explicitly define Data types

        -> Static Typed (Java), where we need to explicitly
            define the data types

    -> Vast Library (**)

    -> Scripting / Object Oriented (OOPS) / Functional (**)

    -> Open Source (Free)

    -> Robust 

    -> Platform Independent


23rd Aug
========

-> Variables

    -> Variables are names for memory locations

        -> Persistent Data (Permanent Data / Long Term Data)

            -> Hard Disk 

        -> Non-Persistent Data (Temporary Data)

            -> RAM (Memory)
    
    -> A variable allows you to 

        -> Assign Data
        -> Manipulate Data (If Required)
        -> Retrieve Data 

    -> Syntax 

        -> variable_name = value
            student_age = 25

            = Assignment operator

    -> NOTE: In Python, the type of a variable can change during execution.

    -> NOTE: A function does a task, and is represented using ()

    -> type() - what is the data type of specified variable

    -> id() - gives the memory address/location of variable

    -> NOTE: Even though a and c are different variables, 
        Python optimizes memory and may reuse the same object.
    
    -> Mutable Data : Data that can change / can be changed (Modify)

        -> Lists, Dictionaries, Sets etc

    -> Immutable Data : Data that cannot be changed (Non Modifiable)

        -> numbers, strings, tuples etc

    -> Any variable data, we can output using print() 

    -> Operator Overloading - a single operator exhibits multiple behaviors
        based on the input data given (OOPS Principle - Polymorphism)


25th Aug
========

-> What is concatenation ? 
    -> Joining multiple Strings

-> What is interpolation ? 
    -> interpolation in programming means replacing placeholders with actual values

-> Using f-Strings (Formatted String Literals)  

    -> An f-String allows you to embed variables directly inside a string using {}

-> A variable allows you to 

        -> Assign Data
            -> Manipulate Data (If Required)
        -> Retrieve Data 


-> Operators

    -> In python, an operator is symbol which performs an operation on
        variables and values

    -> To Manipulate Data we need Operators    

    -> Types Of Operators

        -> Arithmetic Operators - Mathematical calculations
            -> + - * / % 
            -> //- floor division (same as division, but round off value)
            -> ** - exponentiation

        -> Compound Assignment Operators
            -> Python provides Operator to combine Arithmetic and Assignment Operators
            -> For concise(short hand) coding 
            -> x = x + 5 --> x += 5

        -> Comparison Operators    

            -> Used to compare values and return a boolean type(True/False) as result
            -> ==, !=, >, <, >=, <=

        -> Logical Operators
            -> Used to combine multiple conditions(boolean values)
            -> and - return true, when conditions are true
            -> or - return true, at least one condition is true
            -> not - negates the boolean value, if value is true then its result false

        -> Membership Operators
        -> Identity Operators
         






